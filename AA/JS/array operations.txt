                                               JSCODE

let userArray = [];
// Function to create an array based on user input 
function createArray() {
  const arrayLength =
    parseInt(document.getElementById("arrayLength").value);
  userArray = [];
  for (let i = 0; i < arrayLength; i++) {
    userArray.push("");
  }
  document.getElementById("displayArrayCreate").textContent = `Array 
created: [${userArray.join(", ")}]`;
}
// Function to add an element to the array 
function addElement() {
  const arrayElement = document.getElementById("arrayElement").value;
  const index = userArray.indexOf("");
  if (index !== -1) {
    userArray[index] = arrayElement;
  }
  document.getElementById("displayArrayAdd").textContent = `Element 
added: [${userArray.join(", ")}]`;
}
// Function to display the created array 
function displayArray() {
  document.getElementById("displayArray").textContent = `Array: 
[${userArray.join(", ")}]`;
}
// Function to remove an element from the array using a loop (Custom Method)
function removeElementCustom() {
  const elementToRemove =
    document.getElementById("elementToRemove").value;
  for (let i = 0; i < userArray.length; i++) {
    if (userArray[i] === elementToRemove) {
      userArray.splice(i, 1);
      break;
    }
  }
  document.getElementById("displayArrayRemoveCustom").textContent =
    `Element removed: [${userArray.join(", ")}]`;
}
// Function to remove an element from the array using splice method (Splice Method)
function removeElementSplice() {
  const elementToRemove =
    document.getElementById("elementToRemoveSplice").value;
  const index = userArray.indexOf(elementToRemove);
  if (index !== -1) {
    userArray.splice(index, 1);
    document.getElementById("displayArrayRemoveSplice").textContent =
      `Element removed: [${userArray.join(", ")}]`;
  }
}
// Function to check if an element exists in the array using a loop (Custom Method)
function checkElementCustom() {
  const elementToCheck = document.getElementById("elementToCheck").value;
  let exists = false;
  for (let i = 0; i < userArray.length; i++) {
    if (userArray[i] === elementToCheck) {
      exists = true;
      break;
    }
  }
  if (exists) {
    document.getElementById("displayArrayCheckCustom").textContent =
      `${elementToCheck} exists in the array.`;
  } else {
    document.getElementById("displayArrayCheckCustom").textContent =
      `${elementToCheck} does not exist in the array.`;
  }
}
// Function to check if an element exists in the array using includes method(Includes Method)
function checkElementIncludes() {
  const elementToCheck =
    document.getElementById("elementToCheckIncludes").value;
  const exists = userArray.includes(elementToCheck);
  if (exists) {
    document.getElementById("displayArrayCheckIncludes").textContent =
      `${elementToCheck} exists in the array.`;
  } else {
    document.getElementById("displayArrayCheckIncludes").textContent =
      `${elementToCheck} does not exist in the array.`;
  }
}
// Function to empty the array (Custom Method) 
function emptyArrayCustom() {
  userArray = [];
  document.getElementById("displayArrayEmptyCustom").textContent = "Array is now empty.";
}
// Function to empty the array by reassignment (Reassignment) 
function emptyArrayReassign() {
  userArray = [];
  document.getElementById("displayArrayEmptyReassign").textContent =
    "Array is now empty.";
}



                                                               HTMLCODE

<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title><exp6 class="html"></exp6></title>

</head>

<body>
  Hello world<center>
    <h1>Array Operations</h1>
    <hr>
    <!-- User input for array length and elements -->
    <div>
      <h2>Create Array</h2>
      <label for="arrayLength">Enter the length:</label><br>
      <input type="number" id="arrayLength"><br>
      <button onclick="createArray()">Create Array</button>
      <div id="displayArrayCreate"></div>
    </div>


    <!-- Input for array elements -->
    <div class="operation-container">
      <h2>Input Array Elements</h2>
      <input type="text" id="arrayElement" placeholder="Enter an element"><br>
      <button onclick="addElement()">Add</button>
      <div id="displayArrayAdd"></div>
    </div>

    <!-- Display the created array -->
    <div class="operation-container">
      <h2>Display Array</h2>
      <button onclick="displayArray()">Display</button>
      <div id="displayArray"></div>
    </div>
    <hr>
    <!-- Remove Element by Custom Method -->
    <div class="operation-container">
      <h2>Remove Element by user defined Method</h2>
      <label for="elementToRemove">Enter an element to remove:</label><br>
      <input type="text" id="elementToRemove"><br>
      <button onclick="removeElementCustom()">Remove </button>
      <div id="displayArrayRemoveCustom"></div>
    </div>
    <!-- Remove Element by Splice Method -->
    <div class="operation-container">
      <h2>Remove Element by Splice Method</h2>
      <label for="elementToRemoveSplice">Enter an element to remove:</label><br>
      <input type="text" id="elementToRemoveSplice"><br>
      <button onclick="removeElementSplice()">Remove </button>
      <div id="displayArrayRemoveSplice"></div>
    </div>
    <hr>
    <!-- Check Element by Custom Method -->
    <div class="operation-container">
      <h2>Check Element by user defined Method</h2>
      <label for="elementToCheck">Enter an element to search:</label><br>
      <input type="text" id="elementToCheck"><br>
      <button onclick="checkElementCustom()">search</button>
      <div id="displayArrayCheckCustom"></div>
    </div>
    <!-- Check Element by Includes Method -->
    <div class="operation-container">
      <h2>Check Element by Includes Method</h2>
      <label for="elementToCheckIncludes">Enter an element to search:</label><br>
      <input type="text" id="elementToCheckIncludes"><br>
      <button onclick="checkElementIncludes()">search</button>
      <div id="displayArrayCheckIncludes"></div>
    </div>
    <hr>
    <!-- Empty Array by Custom Method -->
    <div class="operation-container">
      <h2>Empty Array by Custom Method</h2>
      <button onclick="emptyArrayCustom()">Empty Array</button>
      <div id="displayArrayEmptyCustom"></div>
    </div>
    <!-- Empty Array by Reassignment -->
    <div class="operation-container">
      <h2>Empty Array by Reassignment</h2>
      <button onclick="emptyArrayReassign()">Empty Array</button>
      <div id="displayArrayEmptyReassign"></div>
    </div>
    <hr>
  </center>
  <script src="exp6.js"></script>

  <!--
  This script places a badge on your repl's full-browser view back to your repl's cover
  page. Try various colors for the theme: dark, light, red, orange, yellow, lime, green,
  teal, blue, blurple, magenta, pink!
  -->
  <script src="https://replit.com/public/js/replit-badge-v2.js" theme="dark" position="bottom-right"></script>
</body>

</html>
